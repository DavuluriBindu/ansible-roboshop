- name: catalogue configure 
  hosts: Catalogue 
  become: yes 
  tasks: 
  - name: disable the nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enable the nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: install nodejs 
    ansible.builtin.dnf:
      name: nodejs 
      state: present 
  - name: adding system user 
    ansible.builtin.user:
      name: roboshop
      system: true
      home: /app 
      comment: "roboshop system user"
      shell: /sbin/nologin
  - name: create directory 
    ansible.builtin.file:
      path: /app 
      state: directory
  - name: download application   
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
      dest: /tmp/catalogue.zip
  - name: extract to the directory 
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app 
      remote_src: yes
  - name: install dependencies 
    community.general.npm: 
       path: /app
      
  - name: copy catalogue service 
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service 

  - name: systemd demon reloadd 
    ansible.builtin.systemd_service:
      daemon_reload: true
      
  - name: start and enable the server  
    ansible.builtin.service:
      state: started
      enabled: yes 

  - name: copy mongodb repo 
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo 

  - name: install mongodb for data 
    ansible.builtin.dnf: 
      name: mongodb-mongosh 
      state: present
    
  - name: products data 
    ansible.builtin.command: mongosh --host mongodb.devops84.site --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register:  catalogue.output 

  - name: print catalogue output 
    ansible.builtin.debug: 
      msg: " {{ catalogue.output }}"

  - name: load products
    ansible.builtin.shell: mongosh --host mongodb.devops84.site < /app/db/master-data.js
    when: catalogue.output.stdout | int < 0
